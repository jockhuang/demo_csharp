services:
  backend:
    image: backend
    build:
      context: ./Demo
      dockerfile: ./Dockerfile
    ports:
      - 8080:80
    secrets:
      - db-password
    environment:  
      - ASPNETCORE_ENVIRONMENT=Development  
      - ConnectionStrings_DefaultConnection=Server=db;Database=example;Uid=root;Pwd=/run/secrets/db-password
      - ASPNETCORE_URLS=http://+:8000/
    healthcheck:
      test: curl --fail http://backend:8000/api/health
      interval: 5s
      retries: 5
      start_period: 30s
    depends_on:
      db:
      # waiting until the db is ready, make sure the migration will success
        condition: service_healthy

  db:
    image: mysql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 3306:3306
  # proxy:
  #     build: proxy
  #     ports:
  #       - 80:80
  #     depends_on:
  #       # - backend
  #       backend:
  #         condition: service_healthy
  frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    ports:
        - 80:80
    depends_on:
      backend:
      # waiting until the db is ready, make sure the migration will success
        condition: service_healthy
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt